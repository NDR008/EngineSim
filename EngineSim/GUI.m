function varargout = GUI(varargin)
% GUI M-file for GUI.fig
%      GUI, by itself, creates a new GUI or raises the existing
%      singleton*.
%
%      H = GUI returns the handle to a new GUI or the handle to
%      the existing singleton*.
%
%      GUI('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in GUI.M with the given input arguments.
%
%      GUI('Property','Value',...) creates a new GUI or raises the
%      existing singleton*.  Starting from the left, property value pairs
%      are
%      applied to the GUI before GUI_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to GUI_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help GUI

% Last Modified by GUIDE v2.5 05-May-2010 14:56:15

% Begin initialization code - DO NOT EDIT
gui_Singleton = 0;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @GUI_OpeningFcn, ...
                   'gui_OutputFcn',  @GUI_OutputFcn, ...
                   'gui_LayoutFcn',  @GUI_LayoutFcn, ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before GUI is made visible.
function GUI_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to GUI (see VARARGIN)

% Choose default command line output for GUI
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes GUI wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = GUI_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;

function Bore_ui_Callback(hObject, eventdata, handles)
% hObject    handle to Bore_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of Bore_ui as text
%        str2double(get(hObject,'String')) returns contents of Bore_ui as a double


% --- Executes during object creation, after setting all properties.
function Bore_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to Bore_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

function RodLength_ui_Callback(hObject, eventdata, handles)
% hObject    handle to RodLength_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of RodLength_ui as text
%        str2double(get(hObject,'String')) returns contents of RodLength_ui as a double


% --- Executes during object creation, after setting all properties.
function RodLength_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to RodLength_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

% --- Executes on selection change in FuelType_ui.
function FuelType_ui_Callback(hObject, eventdata, handles)
% hObject    handle to FuelType_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns FuelType_ui contents as cell array
%        contents{get(hObject,'Value')} returns selected item from FuelType_ui
fueltype = get(handles.FuelType_ui,'Value');
if fueltype ~= 1
    set(handles.EngineSpeed_ui, 'Enable', 'on');
    set(handles.EquivilanceRatio_ui, 'Enable', 'on');
    set(handles.IgnitionTiming_ui, 'Enable', 'on');
    set(handles.VariableSpecificHeats_ui, 'Enable', 'on');
    set(handles.Duration_ui, 'Enable', 'on');
    set(handles.EngineSpeed_txt, 'Enable', 'on');
    set(handles.EquivilanceRatio_txt, 'Enable', 'on');
    set(handles.IgnitionTiming_txt, 'Enable', 'on');
    set(handles.VariableSpecificHeats_txt, 'Enable', 'on');
    set(handles.Duration_txt, 'Enable', 'on');
    if fueltype == 5
        set(handles.IgnitionDelay_txt, 'Enable', 'on');
        set(handles.IgnitionDelay_ui, 'Enable', 'on');
    else
        set(handles.IgnitionDelay_txt, 'Enable', 'off');
        set(handles.IgnitionDelay_ui, 'Enable', 'off');        
    end
    
else
    set(handles.EngineSpeed_ui, 'Enable', 'off');
    set(handles.EquivilanceRatio_ui, 'Enable', 'off');
    set(handles.IgnitionTiming_ui, 'Enable', 'off');
    set(handles.VariableSpecificHeats_ui, 'Enable', 'off');
    set(handles.EngineSpeed_txt, 'Enable', 'off');
    set(handles.EquivilanceRatio_txt, 'Enable', 'off');
    set(handles.IgnitionTiming_txt, 'Enable', 'off');
    set(handles.VariableSpecificHeats_txt, 'Enable', 'off');
    set(handles.IgnitionDelay_txt, 'Enable', 'off');
    set(handles.IgnitionDelay_ui, 'Enable', 'off'); 
    set(handles.Duration_ui, 'Enable', 'off');
    set(handles.Duration_txt, 'Enable', 'off');
end

% --- Executes during object creation, after setting all properties.
function FuelType_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to FuelType_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function Cv_u_ui_Callback(hObject, eventdata, handles)
% hObject    handle to Cv_u_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of Cv_u_ui as text
%        str2double(get(hObject,'String')) returns contents of Cv_u_ui as a double


% --- Executes during object creation, after setting all properties.
function Cv_u_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to Cv_u_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function Cv_b_ui_Callback(hObject, eventdata, handles)
% hObject    handle to Cv_b_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of Cv_b_ui as text
%        str2double(get(hObject,'String')) returns contents of Cv_b_ui as a double


% --- Executes during object creation, after setting all properties.
function Cv_b_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to Cv_b_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function IgnitionDelay_ui_Callback(hObject, eventdata, handles)
% hObject    handle to IgnitionDelay_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of IgnitionDelay_ui as text
%        str2double(get(hObject,'String')) returns contents of IgnitionDelay_ui as a double


% --- Executes during object creation, after setting all properties.
function IgnitionDelay_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to IgnitionDelay_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function Resolution_ui_Callback(hObject, eventdata, handles)
% hObject    handle to Resolution_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of Resolution_ui as text
%        str2double(get(hObject,'String')) returns contents of Resolution_ui as a double


% --- Executes during object creation, after setting all properties.
function Resolution_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to Resolution_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function Error_ui_Callback(hObject, eventdata, handles)
% hObject    handle to Error_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of Error_ui as text
%        str2double(get(hObject,'String')) returns contents of Error_ui as a double


% --- Executes during object creation, after setting all properties.
function Error_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to Error_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on selection change in VariableSpecificHeats_ui.
function VariableSpecificHeats_ui_Callback(hObject, eventdata, handles)
% hObject    handle to VariableSpecificHeats_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns VariableSpecificHeats_ui contents as cell array
%        contents{get(hObject,'Value')} returns selected item from VariableSpecificHeats_ui
property_type = get(handles.VariableSpecificHeats_ui,'Value');
if property_type == 2
    set(handles.Cv_u_txt, 'Enable', 'on');
    set(handles.Cv_u_ui, 'Enable', 'on');
    set(handles.Cv_b_txt, 'Enable', 'on');
    set(handles.Cv_b_ui, 'Enable', 'on');
else
    set(handles.Cv_u_txt, 'Enable', 'off');
    set(handles.Cv_u_ui, 'Enable', 'off');
    set(handles.Cv_b_txt, 'Enable', 'off');
    set(handles.Cv_b_ui, 'Enable', 'off');
end

% --- Executes during object creation, after setting all properties.
function VariableSpecificHeats_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to VariableSpecificHeats_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function EngineSpeed_ui_Callback(hObject, eventdata, handles)
% hObject    handle to EngineSpeed_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of EngineSpeed_ui as text
%        str2double(get(hObject,'String')) returns contents of EngineSpeed_ui as a double


% --- Executes during object creation, after setting all properties.
function EngineSpeed_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to EngineSpeed_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function EquivilanceRatio_ui_Callback(hObject, eventdata, handles)
% hObject    handle to EquivilanceRatio_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of EquivilanceRatio_ui as text
%        str2double(get(hObject,'String')) returns contents of EquivilanceRatio_ui as a double


% --- Executes during object creation, after setting all properties.
function EquivilanceRatio_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to EquivilanceRatio_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function IgnitionTiming_ui_Callback(hObject, eventdata, handles)
% hObject    handle to IgnitionTiming_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of IgnitionTiming_ui as text
%        str2double(get(hObject,'String')) returns contents of IgnitionTiming_ui as a double


% --- Executes during object creation, after setting all properties.
function IgnitionTiming_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to IgnitionTiming_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function InitialPressure_ui_Callback(hObject, eventdata, handles)
% hObject    handle to InitialPressure_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of InitialPressure_ui as text
%        str2double(get(hObject,'String')) returns contents of InitialPressure_ui as a double


% --- Executes during object creation, after setting all properties.
function InitialPressure_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to InitialPressure_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

function InitialTemperature_ui_Callback(hObject, eventdata, handles)
% hObject    handle to InitialTemperature_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of InitialTemperature_ui as text
%        str2double(get(hObject,'String')) returns contents of InitialTemperature_ui as a double


% --- Executes during object creation, after setting all properties.
function InitialTemperature_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to InitialTemperature_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

function CrankRadius_ui_Callback(hObject, eventdata, handles)
% hObject    handle to CrankRadius_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of CrankRadius_ui as text
%        str2double(get(hObject,'String')) returns contents of CrankRadius_ui as a double


% --- Executes during object creation, after setting all properties.
function CrankRadius_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to CrankRadius_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function CompressionRatio_ui_Callback(hObject, eventdata, handles)
% hObject    handle to CompressionRatio_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of CompressionRatio_ui as text
%        str2double(get(hObject,'String')) returns contents of CompressionRatio_ui as a double


% --- Executes during object creation, after setting all properties.
function CompressionRatio_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to CompressionRatio_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in Simulate_UI.
function Simulate_UI_Callback(hObject, eventdata, handles)
% hObject    handle to Simulate_UI (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global P T V CrA xb nTH Err ndata;

B = str2double(get(handles.Bore_ui, 'String')); 
if ((B <= 0) || (isnan(B)))
    errordlg('Bore must be a positive value');
    return
end   

l = str2double(get(handles.RodLength_ui, 'String')); 
if ((l <= 0) || (isnan(l)))
    errordlg('Rod length must be a positive value');
    return
end

a = str2double(get(handles.CrankRadius_ui, 'String')); 
if ((a <= 0) || (isnan(a)))
    errordlg('Crank Radius must be a positive value');
    return
end

CR = str2double(get(handles.CompressionRatio_ui, 'String')); 
if ((CR <= 0) || (isnan(CR)))
    errordlg('Compression Ratio must be a positive value');
    return
end

PInit = str2double(get(handles.InitialPressure_ui, 'String')); 
if (isnan(PInit))
    errordlg('Must enter an initial pressure');
    return
end

TInit = str2double(get(handles.InitialTemperature_ui, 'String')); 
if (isnan(TInit))
    errordlg('Must enter an initial temperature');
    return
end

res = str2double(get(handles.Resolution_ui, 'String')); 
if  ( (isnan(res)) || (mod(res,1)~=0) || (res <= 0) )
        errordlg('Resolution must be a positive integer');
        return 
end

error = str2double(get(handles.Error_ui, 'String')); 
if ((isnan(error)) || (error <= 0))
    errordlg('Error must be positive integer');
    return
end

fueltype = get(handles.FuelType_ui,'Value');
if fueltype == 1
    [ P T V CrA xb nTH Err ] = ESim( B, l, a, CR, PInit, TInit, 1, res, error);
    set(handles.WorkDone_ui, 'String', '0');
    set(handles.nTH_ui, 'String', '0');
elseif fueltype >= 2
    equiv = str2double(get(handles.EquivilanceRatio_ui, 'String')); 
    if ((isnan(equiv)) || (equiv <= 0))
        errordlg('Equivilance ratio must be a positive value');
        return
    end

    N = str2double(get(handles.EngineSpeed_ui, 'String')); 
    if ((isnan(N)) || (N <= 0))
        errordlg('Engine speed must be a positive value');
        return
    end    
    
    duration = str2double(get(handles.Duration_ui, 'String')); 
    if ((isnan(duration)) || (duration <= 0))
        errordlg('Ignition duration must be a positive value');
        return
    end
    
    ign = str2double(get(handles.IgnitionTiming_ui, 'String')); 
    if (isnan(ign))
        errordlg('Ignition timing needed');
        return
    end
    

    propertytype = get(handles.VariableSpecificHeats_ui,'Value');    
    
    if fueltype == 2
        if propertytype == 1
            [ P T V CrA xb nTH Err ] = ESim( B, l, a, CR, PInit, TInit, 0, res, error, equiv, N, duration, ign, 'gasoline', 2);
        else
            Cv_u = str2double(get(handles.Cv_u_ui, 'String')); 
            if ((isnan(Cv_u)) || (Cv_u <= 0))
                errordlg('Specific heat at constant volume for unburned mix must be a positive value');
                return
            end        
            Cv_b = str2double(get(handles.Cv_b_ui, 'String')); 
            if ((isnan(Cv_b)) || (Cv_b <= 0))
                errordlg('Specific heat at constant volume for burned mix must be a positive value');
                return
            end

            [ P T V CrA xb nTH Err ] = ESim( B, l, a, CR, PInit, TInit, 0, res, error, equiv, N, duration, ign, 'gasoline', 1, Cv_u, Cv_b);
        end
    elseif fueltype == 3
        if propertytype == 1
            [ P T V CrA xb nTH Err ] = ESim( B, l, a, CR, PInit, TInit, 0, res, error, equiv, N, duration, ign, 'isooctane', 2);
        else
            Cv_u = str2double(get(handles.Cv_u_ui, 'String')); 
            if ((isnan(Cv_u)) || (Cv_u <= 0))
                errordlg('Specific heat at constant volume for unburned mix must be a positive value');
                return
            end        
            Cv_b = str2double(get(handles.Cv_b_ui, 'String')); 
            if ((isnan(Cv_b)) || (Cv_b <= 0))
                errordlg('Specific heat at constant volume for burned mix must be a positive value');
                return
            end

            [ P T V CrA xb nTH Err ] = ESim( B, l, a, CR, PInit, TInit, 0, res, error, equiv, N, duration, ign, 'isooctane', 1, Cv_u, Cv_b);
        end
    elseif fueltype == 4
        if propertytype == 1
            [ P T V CrA xb nTH Err ] = ESim( B, l, a, CR, PInit, TInit, 0, res, error, equiv, N, duration, ign, 'propane', 2);
        else
            Cv_u = str2double(get(handles.Cv_u_ui, 'String')); 
            if ((isnan(Cv_u)) || (Cv_u <= 0))
                errordlg('Specific heat at constant volume for unburned mix must be a positive value');
                return
            end        
            Cv_b = str2double(get(handles.Cv_b_ui, 'String')); 
            if ((isnan(Cv_b)) || (Cv_b <= 0))
                errordlg('Specific heat at constant volume for burned mix must be a positive value');
                return
            end

            [ P T V CrA xb nTH Err ] = ESim( B, l, a, CR, PInit, TInit, 0, res, error, equiv, N, duration, ign, 'propane', 1, Cv_u, Cv_b);
        end
    elseif fueltype == 5
        
        
        delay = str2double(get(handles.IgnitionDelay_ui, 'String')); 
        if ((isnan(delay)) || (delay <= 0))
            errordlg('Ignition delay must be a positive value');
            return
        end

        
        if propertytype == 1
            [ P T V CrA xb nTH Err ] = ESim( B, l, a, CR, PInit, TInit, 0, res, error, equiv, N, duration, ign, 'diesel', delay, 2);
        else
            Cv_u = str2double(get(handles.Cv_u_ui, 'String')); 
            if ((isnan(Cv_u)) || (Cv_u <= 0))
                errordlg('Specific heat at constant volume for unburned mix must be a positive value');
                return
            end        
            Cv_b = str2double(get(handles.Cv_b_ui, 'String')); 
            if ((isnan(Cv_b)) || (Cv_b <= 0))
                errordlg('Specific heat at constant volume for burned mix must be a positive value');
                return
            end

            [ P T V CrA xb nTH Err ] = ESim( B, l, a, CR, PInit, TInit, 0, res, error, equiv, N, duration, ign, 'diesel', delay,  1, Cv_u, Cv_b);
        end          
    end
    work = WDone(P,V);
    set(handles.WorkDone_ui, 'String', num2str(work));
    set(handles.nTH_ui, 'String', num2str(nTH));
end

type = get(handles.GraphType_ui, 'Value');
axes(handles.Graph_ui);
show = get(handles.Show_ui,'Value');

if P ~= 0
    type = get(handles.GraphType_ui, 'Value');
    axes(handles.Graph_ui);
    switch type
    case 1
        plot(V, P, 'b');
        xlabel('Volume (m^3)');
        ylabel('Pressure (Pa)');
    case 2
        plot(V, T, 'b');
        xlabel('Volume (m^3)');
        ylabel('Temperature (K)');
    case 3
        plot(CrA, P, 'b');
        xlabel('Cranke Angle (degrees)');
        set(gca,'XTick',180:60:540)
        axis([180 540 min(P) max(P)])
        ylabel('Pressure (Pa)');
    case 4
        plot(CrA, T, 'b');
        xlabel('Cranke Angle (degrees)');
        ylabel('Temperature (K)');
        axis([180 540 min(T) max(T)])
    case 5
        plot(CrA, Err, 'b');
        xlabel('Cranke Angle (degrees)');
        ylabel('Error (J)');
        axis([180 540 min(Err) max(Err)])
    case 6
        plot(CrA, xb, 'b');
        xlabel('Cranke Angle (degrees)');
        ylabel('Fraction Burn)');
        axis([270 540 0 1])
    end
    if show == 1
        switch type
        case 1
            hold on;
            plot(ndata(:,1), ndata(:,3), 'r');
            hold off;
        case 3
            hold on;
            plot(ndata(:,2), ndata(:,3), 'r');
            axis([180 540 min(min(ndata(:,3),min(P))) max(max(ndata(:,3),max(P)))])
            hold off;
        end
    end
else
     if ( (show == 1) && (size(ndata,1) ~= 0) )
        switch type
        case 1
            plot(ndata(:,1), ndata(:,3), 'r');
            xlabel('Volume (m^3)');
            ylabel('Pressure (Pa)');            
        case 3
            plot(ndata(:,2), ndata(:,3), 'r');
            xlabel('Cranke Angle (degrees)');
            set(gca,'XTick',180:60:540)
            ylabel('Pressure (Pa)');
            axis([180 540 min(ndata(:,3)) max(ndata(:,3))])
        end
    end
end

set(handles.Graph_ui, 'Visible', 'on');
set(handles.Export_ui, 'Enable', 'on');
set(handles.Graph_ui, 'XGrid', 'on');
set(handles.Graph_ui, 'YGrid', 'on');


% --- Executes on selection change in GraphType_ui.
function GraphType_ui_Callback(hObject, eventdata, handles)
% hObject    handle to GraphType_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns GraphType_ui contents as cell array
%        contents{get(hObject,'Value')} returns selected item from GraphType_ui
global P T V CrA xb nTH Err ndata;

type = get(handles.GraphType_ui, 'Value');
axes(handles.Graph_ui);
show = get(handles.Show_ui,'Value');

if P ~= 0
    type = get(handles.GraphType_ui, 'Value');
    axes(handles.Graph_ui);
    switch type
    case 1
        plot(V, P, 'b');
        xlabel('Volume (m^3)');
        ylabel('Pressure (Pa)');
    case 2
        plot(V, T, 'b');
        xlabel('Volume (m^3)');
        ylabel('Temperature (K)');
    case 3
        plot(CrA, P, 'b');
        xlabel('Cranke Angle (degrees)');
        set(gca,'XTick',180:60:540)
        ylabel('Pressure (Pa)');
        axis([180 540 min(P) max(P)])
    case 4
        plot(CrA, T, 'b');
        xlabel('Cranke Angle (degrees)');
        ylabel('Temperature (K)');
        axis([180 540 min(T) max(T)])
    case 5
        plot(CrA, Err, 'b');
        xlabel('Cranke Angle (degrees)');
        ylabel('Error (J)');
        axis([180 540 min(Err) max(Err)])
    case 6
        plot(CrA, xb, 'b');
        xlabel('Cranke Angle (degrees)');
        ylabel('Fraction Burn)');
        axis([270 540 0 1])
    end
    if show == 1
        switch type
        case 1
            hold on;
            plot(ndata(:,1), ndata(:,3), 'r');
            hold off;
        case 3
            hold on;
            plot(ndata(:,2), ndata(:,3), 'r');
            axis([180 540 min(min(ndata(:,3),min(P))) max(max(ndata(:,3),max(P)))])
            hold off;
        end
    end
else
     if ( (show == 1) && (size(ndata,1) ~= 0) )
        switch type
        case 1
            plot(ndata(:,1), ndata(:,3), 'r');
            xlabel('Volume (m^3)');
            ylabel('Pressure (Pa)');
        case 2
            cla;
            set(handles.Graph_ui, 'Visible', 'off');            
        case 3
            plot(ndata(:,2), ndata(:,3), 'r');
            xlabel('Cranke Angle (degrees)');
            set(gca,'XTick',180:60:540)
            ylabel('Pressure (Pa)');
            axis([180 540 min(ndata(:,3)) max(ndata(:,3))])
        case 4
            cla;
            set(handles.Graph_ui, 'Visible', 'off');
        case 5
            cla;
            set(handles.Graph_ui, 'Visible', 'off');
        case 6
            cla;
            set(handles.Graph_ui, 'Visible', 'off');
        end
    end
end
set(handles.Graph_ui, 'XGrid', 'on');
set(handles.Graph_ui, 'YGrid', 'on');

% --- Executes during object creation, after setting all properties.
function GraphType_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to GraphType_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes when user attempts to close figure1.
function figure1_CloseRequestFcn(hObject, eventdata, handles)
% hObject    handle to figure1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: delete(hObject) closes the figure
delete(hObject);


% --- Executes during object creation, after setting all properties.
function figure1_CreateFcn(hObject, eventdata, handles)
global P T V CrA xb nTH Err;
P = 0;
% hObject    handle to figure1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called



function Duration_ui_Callback(hObject, eventdata, handles)
% hObject    handle to Duration_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of Duration_ui as text
%        str2double(get(hObject,'String')) returns contents of Duration_ui as a double


% --- Executes during object creation, after setting all properties.
function Duration_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to Duration_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function NumberCylinders_ui_Callback(hObject, eventdata, handles)
% hObject    handle to NumberCylinders_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of NumberCylinders_ui as text
%        str2double(get(hObject,'String')) returns contents of NumberCylinders_ui as a double


% --- Executes during object creation, after setting all properties.
function NumberCylinders_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to NumberCylinders_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in Hold_ui.
function Hold_ui_Callback(hObject, eventdata, handles)
% hObject    handle to Hold_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of Hold_ui


% --- Executes on button press in Save_ui.
function Save_ui_Callback(hObject, eventdata, handles)
% hObject    handle to Save_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
B = str2double(get(handles.Bore_ui, 'String')); 
l = str2double(get(handles.RodLength_ui, 'String')); 
a = str2double(get(handles.CrankRadius_ui, 'String')); 
CR = str2double(get(handles.CompressionRatio_ui, 'String')); 
PInit = str2double(get(handles.InitialPressure_ui, 'String')); 
TInit = str2double(get(handles.InitialTemperature_ui, 'String')); 
if ( (isnan(B)) || (isnan(l)) || (isnan(a)) || (isnan(CR)) || (isnan(PInit)) || (isnan(TInit)) )
    errordlg('Missing main parameters');
    return
else
    uisave({'CR', 'B', 'l', 'a', 'PInit', 'TInit'});
end


% --- Executes on button press in Load_ui.
function Load_ui_Callback(hObject, eventdata, handles)
% hObject    handle to Load_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
uiload;

if ~exist('B','var')
    return
end
set(handles.Bore_ui, 'String', num2str(B)); 
set(handles.RodLength_ui, 'String', num2str(l)); 
set(handles.CrankRadius_ui, 'String', num2str(a)); 
set(handles.CompressionRatio_ui, 'String', num2str(CR)); 
set(handles.InitialPressure_ui, 'String', num2str(PInit)); 
set(handles.InitialTemperature_ui, 'String', num2str(TInit)); 


% --- Executes on button press in Export_ui.
function Export_ui_Callback(hObject, eventdata, handles)
% hObject    handle to Export_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global P T V CrA xb Err;

[filename, pathname] = uiputfile({ '*.xls','Excel Format (*.xls)'},'Save location','diesel_sim.xls');
if isequal(filename,0) || isequal(pathname,0)
    return
end

columnHeader = {'Volume (m3)', 'Crank (CA)', 'Pressure (Pa)', 'Temperature (K)', 'Fraction burn', 'Error'};
xlswrite([pathname,'\',filename], columnHeader );
xlswrite([pathname,'\',filename], [V' CrA' P' T' xb' Err'],'Sheet1','A2');


% --- Executes on button press in LoadExcel_ui.
function LoadExcel_ui_Callback(hObject, eventdata, handles)
% hObject    handle to LoadExcel_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global ndata headertext;

[filename, pathname] = uigetfile({ '*.xls','Excel Format (*.xls)'},'Load location','.xls');
if isequal(filename,0) || isequal(pathname,0)
    return
end
[ndata, headertext] = xlsread([pathname,'\',filename]);
set(handles.Show_ui, 'Enable', 'on');
set(handles.Show_ui, 'Value', 0);


% --- Executes on button press in Show_ui.
function Show_ui_Callback(hObject, eventdata, handles)
% hObject    handle to Show_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of Show_ui
global P T V CrA xb Err ndata;
get(handles.Graph_ui,'XGrid')
type = get(handles.GraphType_ui, 'Value');
axes(handles.Graph_ui);
show = get(handles.Show_ui,'Value');

if P ~= 0
    type = get(handles.GraphType_ui, 'Value');
    switch type
    case 1
        plot(V, P, 'b');
        xlabel('Volume (m^3)');
        ylabel('Pressure (Pa)');
    case 2
        plot(V, T, 'b');
        xlabel('Volume (m^3)');
        ylabel('Temperature (K)');
    case 3
        plot(CrA, P, 'b');
        xlabel('Cranke Angle (degrees)');
        set(gca,'XTick',180:60:540)
        ylabel('Pressure (Pa)');
        axis([180 540 min(P) max(P)])
    case 4
        plot(CrA, T, 'b');
        xlabel('Cranke Angle (degrees)');
        ylabel('Temperature (K)');
        axis([180 540 min(T) max(T)])
    case 5
        plot(CrA, Err, 'b');
        xlabel('Cranke Angle (degrees)');
        ylabel('Error (J)');
        axis([180 540 min(Err) max(Err)])
    case 6
        plot(CrA, xb, 'b');
        xlabel('Cranke Angle (degrees)');
        ylabel('Fraction Burn)');
        axis([270 540 0 1])
    end
    if show == 1
        switch type
        case 1
            hold on;
            plot(ndata(:,1), ndata(:,3), 'r');
            hold off;
        case 3
            hold on;
            plot(ndata(:,2), ndata(:,3), 'r');
            axis([180 540 min(min(ndata(:,3),min(P))) max(max(ndata(:,3),max(P)))])
            hold off;
        end
    end
else
     if ( (show == 1) && (size(ndata,1) ~= 0) )
        switch type
        case 1
            plot(ndata(:,1), ndata(:,3), 'r');
            xlabel('Volume (m^3)');
            ylabel('Pressure (Pa)');
        case 2
            cla;
            set(handles.Graph_ui, 'Visible', 'off');
        case 3
            plot(ndata(:,2), ndata(:,3), 'r');
            xlabel('Cranke Angle (degrees)');
            set(gca,'XTick',180:60:540)
            ylabel('Pressure (Pa)');
            axis([180 540 min(ndata(:,3)) max(ndata(:,3))])
        case 4
            cla;
            set(handles.Graph_ui, 'Visible', 'off');
        case 5
            cla;
            set(handles.Graph_ui, 'Visible', 'off');
        case 6
            cla;
            set(handles.Graph_ui, 'Visible', 'off');
        end
     else
         cla;
         set(handles.Graph_ui, 'Visible', 'off');
     end
end
set(handles.Graph_ui, 'XGrid', 'on');
set(handles.Graph_ui, 'YGrid', 'on');

% --- Executes during object creation, after setting all properties.
function Logo_ui_CreateFcn(hObject, eventdata, handles)
% hObject    handle to Logo_ui (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called
imshow('Logo.jpg');
% Hint: place code in OpeningFcn to populate Logo_ui


% --- Creates and returns a handle to the GUI figure. 
function h1 = GUI_LayoutFcn(policy)
% policy - create a new figure or use a singleton. 'new' or 'reuse'.

persistent hsingleton;
if strcmpi(policy, 'reuse') & ishandle(hsingleton)
    h1 = hsingleton;
    return;
end

appdata = [];
appdata.GUIDEOptions = struct(...
    'active_h', [], ...
    'taginfo', struct(...
    'figure', 2, ...
    'uipanel', 7, ...
    'popupmenu', 5, ...
    'text', 32, ...
    'edit', 19, ...
    'pushbutton', 8, ...
    'axes', 4, ...
    'checkbox', 3), ...
    'override', 1, ...
    'release', 13, ...
    'resize', 'none', ...
    'accessibility', 'callback', ...
    'mfile', 1, ...
    'callbacks', 1, ...
    'singleton', 0, ...
    'syscolorfig', 1, ...
    'blocking', 0, ...
    'lastSavedFile', 'C:\Users\Nadir Syed Sammut\Documents\UWE\UFMEAY-30-3 - Individual Project\EngineSim\GUI.m', ...
    'lastFilename', 'C:\Users\Nadir Syed Sammut\Documents\UWE\UFMEAY-30-3 - Individual Project\testing\GUI.fig');
appdata.lastValidTag = 'figure1';
appdata.GUIDELayoutEditor = [];
appdata.initTags = struct(...
    'handle', [], ...
    'tag', 'figure1');

h1 = figure(...
'PaperUnits',get(0,'defaultfigurePaperUnits'),...
'CloseRequestFcn',@(hObject,eventdata)GUI('figure1_CloseRequestFcn',hObject,eventdata,guidata(hObject)),...
'Color',[0.941176470588235 0.941176470588235 0.941176470588235],...
'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...
'IntegerHandle','off',...
'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
'MenuBar','none',...
'Name','GUI',...
'NumberTitle','off',...
'PaperPosition',get(0,'defaultfigurePaperPosition'),...
'PaperSize',get(0,'defaultfigurePaperSize'),...
'PaperType',get(0,'defaultfigurePaperType'),...
'Position',[0 12 1000 588],...
'Resize','off',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('figure1_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'HandleVisibility','callback',...
'Tag','figure1',...
'UserData',[],...
'Visible','on');

appdata = [];
appdata.lastValidTag = 'engine_ui';

h2 = uipanel(...
'Parent',h1,...
'Units','characters',...
'Title','Engine Parameters',...
'Tag','engine_ui',...
'Clipping','on',...
'Position',[1.8 32.8461538461538 46.4 11.6153846153846],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'FuelType_txt';

h3 = uicontrol(...
'Parent',h2,...
'Units','characters',...
'HorizontalAlignment','left',...
'Position',[1.8 1.92307692307692 14.2 1.61538461538462],...
'String','Fuel Type',...
'Style','text',...
'Tag','FuelType_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Bore_txt';

h4 = uicontrol(...
'Parent',h2,...
'Units','characters',...
'HorizontalAlignment','left',...
'Position',[1.8 8.23076923076923 16.2 1.61538461538462],...
'String','Bore (m)',...
'Style','text',...
'Tag','Bore_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Bore_ui';

h5 = uicontrol(...
'Parent',h2,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('Bore_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[1.8 7.07692307692308 18.2 1.61538461538462],...
'String',blanks(0),...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('Bore_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','Bore_ui');

appdata = [];
appdata.lastValidTag = 'RodLength_txt';

h6 = uicontrol(...
'Parent',h2,...
'Units','characters',...
'HorizontalAlignment','left',...
'Position',[24.2 8.00000000000001 16.2 1.61538461538462],...
'String','Rod Length (m)',...
'Style','text',...
'Tag','RodLength_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'CrankRadius_txt';

h7 = uicontrol(...
'Parent',h2,...
'Units','characters',...
'HorizontalAlignment','left',...
'Position',[1.8 5.15384615384615 18.2 1.61538461538462],...
'String','Crank Radius (m)',...
'Style','text',...
'Tag','CrankRadius_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'FuelType_ui';

h8 = uicontrol(...
'Parent',h2,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('FuelType_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[1.8 0 19.8 2.38461538461538],...
'String',{  'Motoring'; 'Gasoline'; 'Iso-octane'; 'Propane'; 'Diesel' },...
'Style','popupmenu',...
'TooltipString','Select Fuel Type',...
'Value',1,...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('FuelType_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','FuelType_ui');

appdata = [];
appdata.lastValidTag = 'CrankRadius_ui';

h9 = uicontrol(...
'Parent',h2,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('CrankRadius_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[1.8 3.92307692307692 18 1.69230769230769],...
'String',blanks(0),...
'Style','edit',...
'TooltipString','Crank Radius = half stroke',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('CrankRadius_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','CrankRadius_ui');

appdata = [];
appdata.lastValidTag = 'CompressionRatio_txt';

h10 = uicontrol(...
'Parent',h2,...
'Units','characters',...
'HorizontalAlignment','left',...
'Position',[24.2 5.07692307692308 18.2 1.61538461538462],...
'String','Compression Ratio',...
'Style','text',...
'Tag','CompressionRatio_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'CompressionRatio_ui';

h11 = uicontrol(...
'Parent',h2,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('CompressionRatio_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[24.2 3.76923076923077 18.2 1.69230769230769],...
'String',blanks(0),...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('CompressionRatio_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','CompressionRatio_ui');

appdata = [];
appdata.lastValidTag = 'RodLength_ui';

h12 = uicontrol(...
'Parent',h2,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('RodLength_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[24.2 6.76923076923077 18.2 1.61538461538462],...
'String',blanks(0),...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('RodLength_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','RodLength_ui');

appdata = [];
appdata.lastValidTag = 'Running_ui';

h13 = uipanel(...
'Parent',h1,...
'Units','characters',...
'Title','Running Conditions',...
'Tag','Running_ui',...
'Clipping','on',...
'Position',[1.8 15.9230769230769 46.6 17],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'EngineSpeed_txt';

h14 = uicontrol(...
'Parent',h13,...
'Units','characters',...
'Enable','off',...
'HorizontalAlignment','left',...
'Position',[1.8 13.6923076923077 19.8 1.61538461538462],...
'String','Engine Speed (rpm)',...
'Style','text',...
'Tag','EngineSpeed_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'EquivilanceRatio_txt';

h15 = uicontrol(...
'Parent',h13,...
'Units','characters',...
'Enable','off',...
'HorizontalAlignment','left',...
'Position',[24.6 13.7692307692308 17 1.61538461538462],...
'String','Equivalence Ratio',...
'Style','text',...
'Tag','EquivilanceRatio_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'EngineSpeed_ui';

h16 = uicontrol(...
'Parent',h13,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('EngineSpeed_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Position',[1.8 12.4615384615385 18.2 1.61538461538462],...
'String',blanks(0),...
'Style','edit',...
'TooltipString','Engine speed in rpm (eg. 3000)',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('EngineSpeed_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','EngineSpeed_ui');

appdata = [];
appdata.lastValidTag = 'EquivilanceRatio_ui';

h17 = uicontrol(...
'Parent',h13,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('EquivilanceRatio_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Position',[24.6 12.5384615384615 18.2 1.61538461538462],...
'String',blanks(0),...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('EquivilanceRatio_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','EquivilanceRatio_ui');

appdata = [];
appdata.lastValidTag = 'IgnitionTiming_txt';

h18 = uicontrol(...
'Parent',h13,...
'Units','characters',...
'Enable','off',...
'HorizontalAlignment','left',...
'Position',[1.6 10.1538461538462 26.4 1.61538461538462],...
'String','Ignition Timing (BTDC)',...
'Style','text',...
'Tag','IgnitionTiming_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'IgnitionTiming_ui';

h19 = uicontrol(...
'Parent',h13,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('IgnitionTiming_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Position',[1.8 8.92307692307692 18.2 1.61538461538462],...
'String',blanks(0),...
'Style','edit',...
'TooltipString','Ignition timing for SI or injection timing for CI (eg. 15)',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('IgnitionTiming_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','IgnitionTiming_ui');

appdata = [];
appdata.lastValidTag = 'InitialPressure_txt';

h20 = uicontrol(...
'Parent',h13,...
'Units','characters',...
'HorizontalAlignment','left',...
'Position',[1.8 6.15384615384615 17 2.38461538461538],...
'String','Initial Pressure (Pa)',...
'Style','text',...
'Tag','InitialPressure_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'InitialPressure_ui';

h21 = uicontrol(...
'Parent',h13,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('InitialPressure_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[1.8 4.61538461538462 18.2 1.61538461538462],...
'String',blanks(0),...
'Style','edit',...
'TooltipString','Initial pressure in cylinder at the start of compression in Pa',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('InitialPressure_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','InitialPressure_ui');

appdata = [];
appdata.lastValidTag = 'InitialTemperature_txt';

h22 = uicontrol(...
'Parent',h13,...
'HorizontalAlignment','left',...
'Position',[124 83 90 28],...
'String','Initial Temperature (K)',...
'Style','text',...
'Tag','InitialTemperature_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'InitialTemperature_ui';

h23 = uicontrol(...
'Parent',h13,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('InitialTemperature_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[24.6 4.61538461538462 18.2 1.61538461538462],...
'String',blanks(0),...
'Style','edit',...
'TooltipString','Temperature of gas/air in cylinder at start of compression in Kelvin',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('InitialTemperature_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','InitialTemperature_ui');

appdata = [];
appdata.lastValidTag = 'IgnitionDelay_txt';

h24 = uicontrol(...
'Parent',h13,...
'Units','characters',...
'Enable','off',...
'HorizontalAlignment','left',...
'Position',[24.6 10.2307692307692 17 1.61538461538462],...
'String','Ignition Delay (ms)',...
'Style','text',...
'Tag','IgnitionDelay_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'IgnitionDelay_ui';

h25 = uicontrol(...
'Parent',h13,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('IgnitionDelay_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Position',[24.6 8.92307692307692 18.2 1.61538461538462],...
'String',blanks(0),...
'Style','edit',...
'TooltipString','Ignition Delay in ms (property related to Cetane number of fuel)',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('IgnitionDelay_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','IgnitionDelay_ui');

appdata = [];
appdata.lastValidTag = 'Duration_txt';

h26 = uicontrol(...
'Parent',h13,...
'Units','characters',...
'Enable','off',...
'HorizontalAlignment','left',...
'Position',[1.8 2.38461538461538 17 1.61538461538462],...
'String','Ignition Duration (CA)',...
'Style','text',...
'Tag','Duration_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Duration_ui';

h27 = uicontrol(...
'Parent',h13,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('Duration_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Position',[1.8 1.07692307692308 18.2 1.61538461538462],...
'String',blanks(0),...
'Style','edit',...
'TooltipString','Ignition duration in crank angles',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('Duration_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','Duration_ui');

appdata = [];
appdata.lastValidTag = 'Model_ui';

h28 = uipanel(...
'Parent',h1,...
'Units','characters',...
'Title','Model Parameters',...
'Tag','Model_ui',...
'Clipping','on',...
'Position',[1.8 1.30769230769231 46.6 14.6923076923077],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Cv_u_txt';

h29 = uicontrol(...
'Parent',h28,...
'Units','characters',...
'Enable','off',...
'HorizontalAlignment','left',...
'Position',[1.8 6 19.8 2.46153846153846],...
'String','Unburned Specific Heat Cv (J/kgK)',...
'Style','text',...
'Tag','Cv_u_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Cv_u_ui';

h30 = uicontrol(...
'Parent',h28,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('Cv_u_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Position',[1.8 4.61538461538462 18.2 1.61538461538462],...
'String',blanks(0),...
'Style','edit',...
'TooltipString','Specific heat at constant volume of unburned gas',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('Cv_u_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','Cv_u_ui');

appdata = [];
appdata.lastValidTag = 'Cv_b_txt';

h31 = uicontrol(...
'Parent',h28,...
'Units','characters',...
'Enable','off',...
'HorizontalAlignment','left',...
'Position',[24.8 6.15384615384615 18.2 2.38461538461538],...
'String','Burned Specific Heat Cv (J/kgK)',...
'Style','text',...
'Tag','Cv_b_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Cv_b_ui';

h32 = uicontrol(...
'Parent',h28,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('Cv_b_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Position',[24.8 4.61538461538462 18.2 1.61538461538462],...
'String',blanks(0),...
'Style','edit',...
'TooltipString','Specific heat at constant volume of burned gas',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('Cv_b_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','Cv_b_ui');

appdata = [];
appdata.lastValidTag = 'Resolution_txt';

h33 = uicontrol(...
'Parent',h28,...
'Units','characters',...
'HorizontalAlignment','left',...
'Position',[24.8 2.23076923076923 17 1.61538461538462],...
'String','Resolution',...
'Style','text',...
'Tag','Resolution_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Resolution_ui';

h34 = uicontrol(...
'Parent',h28,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('Resolution_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[24.8 1 18.2 1.61538461538462],...
'String',blanks(0),...
'Style','edit',...
'TooltipString','Number of steps required for the cycle',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('Resolution_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','Resolution_ui');

appdata = [];
appdata.lastValidTag = 'VariableSpecificHeats_txt';

h35 = uicontrol(...
'Parent',h28,...
'Units','characters',...
'Enable','off',...
'HorizontalAlignment','left',...
'Position',[1.8 10.7692307692308 18.2 2.38461538461538],...
'String','Variable Specific Heats',...
'Style','text',...
'Tag','VariableSpecificHeats_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'VariableSpecificHeats_ui';

h36 = uicontrol(...
'Parent',h28,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('VariableSpecificHeats_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Position',[1.8 8.38461538461539 18.2 2.38461538461538],...
'String',{  'No'; 'Yes (specify)' },...
'Style','popupmenu',...
'Value',1,...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('VariableSpecificHeats_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','VariableSpecificHeats_ui');

appdata = [];
appdata.lastValidTag = 'MaximumError_txt';

h37 = uicontrol(...
'Parent',h28,...
'Units','characters',...
'HorizontalAlignment','left',...
'Position',[1.8 2.23076923076923 17 1.61538461538462],...
'String','Maximum Error',...
'Style','text',...
'Tag','MaximumError_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Error_ui';

h38 = uicontrol(...
'Parent',h28,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('Error_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[1.8 1 18.2 1.61538461538462],...
'String',blanks(0),...
'Style','edit',...
'TooltipString','Maximum permissible error (if achievable)',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('Error_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','Error_ui');

appdata = [];
appdata.lastValidTag = 'VariableSpecificHeats_txt';

h39 = uicontrol(...
'Parent',h28,...
'Units','characters',...
'Enable','off',...
'HorizontalAlignment','left',...
'Position',[1.8 10.7692307692308 18.2 2.38461538461538],...
'String','Constant Specific Heats',...
'Style','text',...
'Tag','VariableSpecificHeats_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Simulate_UI';

h40 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'Callback',@(hObject,eventdata)GUI('Simulate_UI_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[77.8 43.4615384615385 14.2 1.69230769230769],...
'String','Simulate',...
'Tag','Simulate_UI',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Graph_ui';

h41 = axes(...
'Parent',h1,...
'Units','characters',...
'Position',[65.8 5.07692307692308 128 36.2307692307692],...
'AmbientLightColor',[0 0 0],...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'Color',get(0,'defaultaxesColor'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'LooseInset',[26 5.07692307692308 19 3.46153846153846],...
'XColor',get(0,'defaultaxesXColor'),...
'XGrid','on',...
'YColor',get(0,'defaultaxesYColor'),...
'YGrid','on',...
'ZColor',get(0,'defaultaxesZColor'),...
'Tag','Graph_ui',...
'UserData',[],...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

h42 = get(h41,'title');

set(h42,...
'Parent',h41,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.49921875 1.01380042462845 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h43 = get(h41,'xlabel');

set(h43,...
'Parent',h41,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0.313725490196078 0.313725490196078 0.313725490196078],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.49921875 -0.0498938428874736 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','cap',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h44 = get(h41,'ylabel');

set(h44,...
'Parent',h41,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-0.0445312500000001 0.497876857749469 1.00005459937205],...
'Rotation',90,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h45 = get(h41,'zlabel');

set(h45,...
'Parent',h41,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','right',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-0.51484375 1.10509554140127 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','middle',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

appdata = [];
appdata.lastValidTag = 'GraphType_ui';

h46 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)GUI('GraphType_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[175.6 43.5384615384615 22.2 1.61538461538462],...
'String',{  'P-V'; 'T-V'; 'P-CrA'; 'T-CrA'; 'E-CrA'; 'xb-CrA' },...
'Style','popupmenu',...
'Value',1,...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('GraphType_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','GraphType_ui');

appdata = [];
appdata.lastValidTag = 'WorkDone_txt';

h47 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'Position',[79.6 0.923076923076923 18.2 1.15384615384615],...
'String','Work Done (J):',...
'Style','text',...
'Tag','WorkDone_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'WorkDone_ui';

h48 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'Position',[95.4 1 10.4 1.07692307692308],...
'String','0',...
'Style','text',...
'Tag','WorkDone_ui',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'nTH_txt';

h49 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'Position',[49.4 0.923076923076923 18.2 1.15384615384615],...
'String','Thermal Efficiency',...
'Style','text',...
'Tag','nTH_txt',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'nTH_ui';

h50 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'Position',[67.4 1 10.4 1.07692307692308],...
'String','0',...
'Style','text',...
'Tag','nTH_ui',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Save_ui';

h51 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'Callback',@(hObject,eventdata)GUI('Save_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[95.6 43.4615384615385 12.2 1.69230769230769],...
'String','Save',...
'Tag','Save_ui',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Load_ui';

h52 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'Callback',@(hObject,eventdata)GUI('Load_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[109.6 43.4615384615385 12.2 1.69230769230769],...
'String','Load',...
'Tag','Load_ui',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Export_ui';

h53 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'Callback',@(hObject,eventdata)GUI('Export_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Position',[129.6 43.4615384615385 14.2 1.69230769230769],...
'String','Save Excel',...
'Tag','Export_ui',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Show_ui';

h54 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'Callback',@(hObject,eventdata)GUI('Show_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Position',[160.4 43.3846153846154 11.4 1.76923076923077],...
'String','Show',...
'Style','checkbox',...
'Tag','Show_ui',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'LoadExcel_ui';

h55 = uicontrol(...
'Parent',h1,...
'Units','characters',...
'Callback',@(hObject,eventdata)GUI('LoadExcel_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[145.8 43.4615384615385 14.2 1.69230769230769],...
'String','Load Excel',...
'Tag','LoadExcel_ui',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Logo_ui';

h56 = axes(...
'Parent',h1,...
'Units','pixels',...
'Position',[440 207 420 210],...
'Box','on',...
'CameraPosition',[210.5 106 2350.61701836313],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'Color',get(0,'defaultaxesColor'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'DataAspectRatio',get(0,'defaultaxesDataAspectRatio'),...
'DataAspectRatioMode','manual',...
'Layer','top',...
'LooseInset',[130 66 95 45],...
'TickDir','out',...
'TickDirMode','manual',...
'XColor',get(0,'defaultaxesXColor'),...
'XLim',[0.5 420.5],...
'XLimMode','manual',...
'YColor',get(0,'defaultaxesYColor'),...
'YDir','reverse',...
'YLim',[0.5 211.5],...
'YLimMode','manual',...
'ZColor',get(0,'defaultaxesZColor'),...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)GUI('Logo_ui_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','Logo_ui',...
'Visible','off');

h57 = get(h56,'title');

set(h57,...
'Parent',h56,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[209.997619047619 -6.03095238095236 1.01401077007358],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h58 = get(h56,'xlabel');

set(h58,...
'Parent',h56,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[209.997619047619 240.135714285714 1.01401077007358],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','cap',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h59 = get(h56,'ylabel');

set(h59,...
'Parent',h56,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-36.1690476190476 107.507142857143 1.01401077007358],...
'Rotation',90,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

h60 = get(h56,'zlabel');

set(h60,...
'Parent',h56,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','right',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-442.092857142857 -170.811904761905 1.01401077007358],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','middle',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], ''} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

appdata = [];
appdata.lastValidTag = 'File';

h61 = uimenu(...
'Parent',h1,...
'Accelerator','F',...
'Label','File',...
'Tag','File',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'LoadSettings';

h62 = uimenu(...
'Parent',h61,...
'Accelerator','L',...
'Callback',@(hObject,eventdata)GUI('Load_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Load Settings',...
'Separator','on',...
'Tag','LoadSettings',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'SaveSettings';

h63 = uimenu(...
'Parent',h61,...
'Accelerator','A',...
'Callback',@(hObject,eventdata)GUI('Save_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Save Settings',...
'Tag','SaveSettings',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'LoadExcel';

h64 = uimenu(...
'Parent',h61,...
'Callback',@(hObject,eventdata)GUI('LoadExcel_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Load Excel',...
'Separator','on',...
'Tag','LoadExcel',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'SaveExcel';

h65 = uimenu(...
'Parent',h61,...
'Callback',@(hObject,eventdata)GUI('Export_ui_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Save Excel',...
'Tag','SaveExcel',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'Simulate';

h66 = uimenu(...
'Parent',h61,...
'Accelerator','S',...
'Callback',@(hObject,eventdata)GUI('Simulate_UI_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Simulate',...
'Separator','on',...
'Tag','Simulate',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );


hsingleton = h1;


% --- Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject, eventdata, createfcn, appdata)

if ~isempty(appdata)
   names = fieldnames(appdata);
   for i=1:length(names)
       name = char(names(i));
       setappdata(hObject, name, getfield(appdata,name));
   end
end

if ~isempty(createfcn)
   if isa(createfcn,'function_handle')
       createfcn(hObject, eventdata);
   else
       eval(createfcn);
   end
end


% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)

gui_StateFields =  {'gui_Name'
    'gui_Singleton'
    'gui_OpeningFcn'
    'gui_OutputFcn'
    'gui_LayoutFcn'
    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error('MATLAB:gui_mainfcn:FieldNotFound', 'Could not find field %s in the gui_State struct in GUI M-file %s', gui_StateFields{i}, gui_Mfile);
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % GUI
    % create the GUI only if we are not in the process of loading it
    % already
    gui_Create = true;
elseif local_isInvokeActiveXCallback(gui_State, varargin{:})
    % GUI(ACTIVEX,...)
    vin{1} = gui_State.gui_Name;
    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
    vin{3} = varargin{1};
    vin{4} = varargin{end-1};
    vin{5} = guidata(varargin{1}.Peer);
    feval(vin{:});
    return;
elseif local_isInvokeHGCallback(gui_State, varargin{:})
    % GUI('CALLBACK',hObject,eventData,handles,...)
    gui_Create = false;
else
    % GUI(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = true;
end

if ~gui_Create
    % In design time, we need to mark all components possibly created in
    % the coming callback evaluation as non-serializable. This way, they
    % will not be brought into GUIDE and not be saved in the figure file
    % when running/saving the GUI from GUIDE.
    designEval = false;
    if (numargin>1 && ishghandle(varargin{2}))
        fig = varargin{2};
        while ~isempty(fig) && ~isa(handle(fig),'figure')
            fig = get(fig,'parent');
        end
        
        designEval = isappdata(0,'CreatingGUIDEFigure') || isprop(fig,'__GUIDEFigure');
    end
        
    if designEval
        beforeChildren = findall(fig);
    end
    
    % evaluate the callback now
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else       
        feval(varargin{:});
    end
    
    % Set serializable of objects created in the above callback to off in
    % design time. Need to check whether figure handle is still valid in
    % case the figure is deleted during the callback dispatching.
    if designEval && ishandle(fig)
        set(setdiff(findall(fig),beforeChildren), 'Serializable','off');
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end

    % Check user passing 'visible' P/V pair first so that its value can be
    % used by oepnfig to prevent flickering
    gui_Visible = 'auto';
    gui_VisibleInput = '';
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        % Recognize 'visible' P/V pair
        len1 = min(length('visible'),length(varargin{index}));
        len2 = min(length('off'),length(varargin{index+1}));
        if ischar(varargin{index+1}) && strncmpi(varargin{index},'visible',len1) && len2 > 1
            if strncmpi(varargin{index+1},'off',len2)
                gui_Visible = 'invisible';
                gui_VisibleInput = 'off';
            elseif strncmpi(varargin{index+1},'on',len2)
                gui_Visible = 'visible';
                gui_VisibleInput = 'on';
            end
        end
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.

    
    % Do feval on layout code in m-file if it exists
    gui_Exported = ~isempty(gui_State.gui_LayoutFcn);
    % this application data is used to indicate the running mode of a GUIDE
    % GUI to distinguish it from the design mode of the GUI in GUIDE. it is
    % only used by actxproxy at this time.   
    setappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]),1);
    if gui_Exported
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);

        % make figure invisible here so that the visibility of figure is
        % consistent in OpeningFcn in the exported GUI case
        if isempty(gui_VisibleInput)
            gui_VisibleInput = get(gui_hFigure,'Visible');
        end
        set(gui_hFigure,'Visible','off')

        % openfig (called by local_openfig below) does this for guis without
        % the LayoutFcn. Be sure to do it here so guis show up on screen.
        movegui(gui_hFigure,'onscreen');
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        end
    end
    if isappdata(0, genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]))
        rmappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]));
    end

    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    % Singleton setting in the GUI M-file takes priority if different
    gui_Options.singleton = gui_State.gui_Singleton;

    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
        if gui_Options.syscolorfig
            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
        end

        % Generate HANDLES structure and store with GUIDATA. If there is
        % user set GUI data already, keep that also.
        data = guidata(gui_hFigure);
        handles = guihandles(gui_hFigure);
        if ~isempty(handles)
            if isempty(data)
                data = handles;
            else
                names = fieldnames(handles);
                for k=1:length(names)
                    data.(char(names(k)))=handles.(char(names(k)));
                end
            end
        end
        guidata(gui_hFigure, data);
    end

    % Apply input P/V pairs other than 'visible'
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        len1 = min(length('visible'),length(varargin{index}));
        if ~strncmpi(varargin{index},'visible',len1)
            try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end
        end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end

    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});

    if isscalar(gui_hFigure) && ishandle(gui_hFigure)
        % Handle the default callbacks of predefined toolbar tools in this
        % GUI, if any
        guidemfile('restoreToolbarToolPredefinedCallback',gui_hFigure); 
        
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);

        % Call openfig again to pick up the saved visibility or apply the
        % one passed in from the P/V pairs
        if ~gui_Exported
            gui_hFigure = local_openfig(gui_State.gui_Name, 'reuse',gui_Visible);
        elseif ~isempty(gui_VisibleInput)
            set(gui_hFigure,'Visible',gui_VisibleInput);
        end
        if strcmpi(get(gui_hFigure, 'Visible'), 'on')
            figure(gui_hFigure);
            
            if gui_Options.singleton
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        if isappdata(gui_hFigure,'InGUIInitialization')
            rmappdata(gui_hFigure,'InGUIInitialization');
        end

        % If handle visibility is set to 'callback', turn it on until
        % finished with OutputFcn
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end

    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end

    if isscalar(gui_hFigure) && ishandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end

function gui_hFigure = local_openfig(name, singleton, visible)

% openfig with three arguments was new from R13. Try to call that first, if
% failed, try the old openfig.
if nargin('openfig') == 2
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = openfig(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
else
    gui_hFigure = openfig(name, singleton, visible);
end

function result = local_isInvokeActiveXCallback(gui_State, varargin)

try
    result = ispc && iscom(varargin{1}) ...
             && isequal(varargin{1},gcbo);
catch
    result = false;
end

function result = local_isInvokeHGCallback(gui_State, varargin)

try
    fhandle = functions(gui_State.gui_Callback);
    result = ~isempty(findstr(gui_State.gui_Name,fhandle.file)) || ...
             (ischar(varargin{1}) ...
             && isequal(ishandle(varargin{2}), 1) ...
             && (~isempty(strfind(varargin{1},[get(varargin{2}, 'Tag'), '_'])) || ...
                ~isempty(strfind(varargin{1}, '_CreateFcn'))) );
catch
    result = false;
end


